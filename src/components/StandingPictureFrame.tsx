/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 src/assets/3d/standing_picture_frame_01_4k.glb -t
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { Texture } from "three";
import { GLTF } from "three-stdlib";

import cardFrameGLTF from "../assets/3d/standing_picture_frame_01_4k.glb";

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh;
    Cube001_1: THREE.Mesh;
    Cube001_2: THREE.Mesh;
  };
  materials: {
    standing_picture_frame_01_glass: THREE.MeshStandardMaterial;
    standing_picture_frame_01_artwork: THREE.MeshStandardMaterial;
    standing_picture_frame_01: THREE.MeshStandardMaterial;
  };
};

export function StandingPictureFrame({ texture }: { texture: Texture }) {
  const { nodes, materials } = useGLTF(cardFrameGLTF) as GLTFResult;

  return (
    <group dispose={null} scale={40}>
      <group position={[0, -0.11, 0]}>
        <mesh geometry={nodes.Cube001.geometry}>
          <meshStandardMaterial
            {...materials.standing_picture_frame_01_glass}
            opacity={0.1}
          />
        </mesh>
        <mesh
          geometry={nodes.Cube001_1.geometry}
          // material={materials.standing_picture_frame_01_artwork}
          rotation={[-Math.PI, 0, 0]}
          position={[0, 0.25, 0.013]}
        >
          <meshStandardMaterial map={texture} side={THREE.BackSide} />
        </mesh>
        <mesh
          geometry={nodes.Cube001_2.geometry}
          material={materials.standing_picture_frame_01}
        />
      </group>
    </group>
  );
}

// useGLTF.preload("../assets/3d/standing_picture_frame_01_4k.glb");
